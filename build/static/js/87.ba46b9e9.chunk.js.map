{"version":3,"file":"static/js/87.ba46b9e9.chunk.js","mappings":"0RAiGA,EAtFc,WACb,IAAAA,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,YAAWC,EAAAA,GAAcC,gBAEpCC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAM,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd,GAAnBL,EAAEM,iBACe,KAAb9B,GAAgC,KAAbI,EAAe,CAAAuB,EAAAE,KAAA,QAEG,OADxCpB,EAAY,gCACZsB,YAAW,kBAAMtB,EAAY,GAAG,GAAE,KAAMkB,EAAAK,OAAA,wBAAAL,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAKtBI,EAAAA,EAAIC,6BAA6B,CAClDlC,SAAAA,EACAI,SAAAA,IACE,KAAD,EAHIqB,EAAGE,EAAAQ,KAKRzB,EAAO,CACN0B,UAAWX,EAAIY,KAAKC,KACpBC,MAAOd,EAAIY,KAAKG,YAChBC,UAAWC,EAAAA,GACXC,aAAclB,EAAIY,KAAKM,aACvBC,qBAAsBC,EAAAA,GACtBC,UAAW,CACV9C,SAAUA,EACV+C,KAAMtB,EAAIY,KAAKW,KAAKD,KACpBE,KAAMxB,EAAIY,KAAKW,KAAKC,UAItBnC,EAAS,sBACTF,EAAS,WACTe,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAuB,GAAAvB,EAAA,SAED,IACClB,EAAY0C,KAAKC,MAAMzB,EAAAuB,GAAMG,QAAQC,UAAUC,QAChD,CAAE,MAAAC,GACD/C,EAAY,qCACZgD,QAAQC,IAAG/B,EAAAuB,GACZ,CAAC,yBAAAvB,EAAAgC,OAAA,GAAApC,EAAA,mBAEF,gBAtCiBqC,GAAA,OAAAzC,EAAA0C,MAAA,KAAAC,UAAA,KAwClB,OACCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,SAAQC,SAAC,WACvBC,EAAAA,EAAAA,MAAA,QAAMC,SAAUjD,EAAa+C,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,QAAOC,SAAA,CAAC,YAExBF,EAAAA,EAAAA,KAAA,SACChB,KAAK,WACLiB,UAAU,cACVI,aAAa,MACb9B,KAAK,OACL+B,MAAOrE,EACPsE,SAAU,SAAC9C,GAAC,OAAKvB,EAAYuB,EAAE+C,OAAOF,MAAM,QAG9CH,EAAAA,EAAAA,MAAA,SAAOF,UAAU,QAAOC,SAAA,CAAC,WACf,KACTF,EAAAA,EAAAA,KAAA,SACChB,KAAK,WACLqB,aAAa,MACbJ,UAAU,cACV1B,KAAK,WACL+B,MAAOjE,EACPkE,SAAU,SAAC9C,GAAC,OAAKnB,EAAYmB,EAAE+C,OAAOF,MAAM,QAG9CN,EAAAA,EAAAA,KAAA,SAAOzB,KAAK,SAAS+B,MAAO,cAC5BN,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMS,QAAS,kBAAM5D,EAAS,KAAK,EAACqD,SAAC,uBAEtCF,EAAAA,EAAAA,KAAA,OAAAE,SAAMzD,QAIV,C","sources":["Screens/Login.tsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport \"./styles/Login.css\";\r\nimport API from \"../Utilities/ApiEndpoints\";\r\nimport { useSignIn } from \"react-auth-kit\";\r\nimport {\r\n\tACCESS_TOKEN_EXPIRY_TIME,\r\n\tREFRESH_TOKEN_EXPIRY_TIME,\r\n} from \"../Utilities/AuthUtils\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { ToastContext } from \"../Utilities/ToastContext\";\r\n\r\nconst Login = () => {\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n\tconst signIn = useSignIn();\r\n\tconst navigate = useNavigate();\r\n\tconst setToast = useContext(ToastContext).setToastMessage;\r\n\r\n\tconst handleSubmit = async (e: any) => {\r\n\t\te.preventDefault();\r\n\t\tif (username === \"\" || password === \"\") {\r\n\t\t\tsetErrorMsg(\"Enter Username and Password!\");\r\n\t\t\tsetTimeout(() => setErrorMsg(\"\"), 3000);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await API.LoginWithUsernameAndPassword({\r\n\t\t\t\tusername,\r\n\t\t\t\tpassword,\r\n\t\t\t});\r\n\t\t\tif (\r\n\t\t\t\tsignIn({\r\n\t\t\t\t\ttokenType: res.data.type as string,\r\n\t\t\t\t\ttoken: res.data.accessToken as string,\r\n\t\t\t\t\texpiresIn: ACCESS_TOKEN_EXPIRY_TIME,\r\n\t\t\t\t\trefreshToken: res.data.refreshToken as string,\r\n\t\t\t\t\trefreshTokenExpireIn: REFRESH_TOKEN_EXPIRY_TIME,\r\n\t\t\t\t\tauthState: {\r\n\t\t\t\t\t\tusername: username,\r\n\t\t\t\t\t\tname: res.data.user.name,\r\n\t\t\t\t\t\trole: res.data.user.role,\r\n\t\t\t\t\t},\r\n\t\t\t\t})\r\n\t\t\t) {\r\n\t\t\t\tsetToast(\"Login Successfull!\");\r\n\t\t\t\tnavigate(\"/admin\");\r\n\t\t\t}\r\n\t\t} catch (error: any) {\r\n\t\t\ttry {\r\n\t\t\t\tsetErrorMsg(JSON.parse(error.request.response).message);\r\n\t\t\t} catch {\r\n\t\t\t\tsetErrorMsg(\"Could not connect with the Server\");\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"loginContainer\">\r\n\t\t\t<div className=\"loginDialog\">\r\n\t\t\t\t<h1 className=\"fjalla\">Login</h1>\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<label className=\"field\">\r\n\t\t\t\t\t\tUsername\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\tclassName=\"styledInput\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label className=\"field\">\r\n\t\t\t\t\t\tPassword{\" \"}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tclassName=\"styledInput\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input type=\"submit\" value={\"Continue\"} />\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<span onClick={() => navigate(\"..\")}>Go to Homepage</span>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div>{errorMsg}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","errorMsg","setErrorMsg","signIn","useSignIn","navigate","useNavigate","setToast","useContext","ToastContext","setToastMessage","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","res","wrap","_context","prev","next","preventDefault","setTimeout","abrupt","API","LoginWithUsernameAndPassword","sent","tokenType","data","type","token","accessToken","expiresIn","ACCESS_TOKEN_EXPIRY_TIME","refreshToken","refreshTokenExpireIn","REFRESH_TOKEN_EXPIRY_TIME","authState","name","user","role","t0","JSON","parse","request","response","message","_unused","console","log","stop","_x","apply","arguments","_jsx","className","children","_jsxs","onSubmit","autoComplete","value","onChange","target","onClick"],"sourceRoot":""}